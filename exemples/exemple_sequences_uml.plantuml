@startuml SequenceDiagram
' Diagramme de séquence : Déroulement d'une partie

title Séquence - Déroulement d'une partie de Tour Maudite

participant "Joueur" as J
participant "Main.py" as Main
participant "Game" as G
participant "MenuScene" as MS
participant "GameScene" as GS
participant "Player" as P
participant "Weapon" as W
participant "Enemy" as E
participant "Projectile" as Proj

Main -> G : Game()
activate G
G -> MS : MenuScene(self)
activate MS
G -> GS : GameScene(self)
activate GS
GS -> P : Player(SCREEN_WIDTH/2, SCREEN_HEIGHT/2)
activate P
GS -> W : Weapon(fire_rate=2.0)
activate W

Main -> G : run()
G -> MS : on_enter()

loop Boucle principale [running]
    G -> G : handle_events()
    
    alt Clic sur "Jouer" ou appui sur ENTER
        J -> MS : handle_event(MOUSEBUTTONDOWN/KEYDOWN)
        MS -> G : change_scene(SCENE_GAME)
        G -> MS : on_exit()
        G -> GS : on_enter()
    end
    
    G -> GS : update()
    
    loop Pour chaque ennemi [enemies]
        GS -> E : update(player)
        alt Type shooter et cooldown écoulé
            E -> E : shoot(dx, dy, projectiles)
            E -> Proj : Projectile(x, y, dx, dy, damage)
            activate Proj
        end
    end
    
    GS -> P : update()
    P -> W : update_direction(last_dx, last_dy)
    
    alt Joueur immobile depuis 0.5s
        GS -> W : update(player, current_time, projectiles, enemies)
        W -> W : find_closest_enemy(player, enemies)
        W -> W : shoot_at_target(player, enemy, projectiles)
        W -> Proj : Projectile(x, y, dx, dy, damage)
        activate Proj
    end
    
    loop Pour chaque projectile [projectiles]
        GS -> Proj : update()
        alt Collision avec ennemi
            Proj -> E : take_damage(damage)
            alt Ennemi mort
                GS -> E : remove(enemy)
            end
            GS -> Proj : remove(projectile)
        end
    end
    
    G -> GS : draw(screen)
    GS -> P : draw(screen)
    loop Pour chaque ennemi [enemies]
        GS -> E : draw(screen)
    end
    loop Pour chaque projectile [projectiles]
        GS -> Proj : draw(screen)
    end
    
    alt Appui sur ESC
        J -> GS : handle_event(KEYDOWN)
        GS -> G : change_scene(SCENE_MENU)
        G -> GS : on_exit()
        G -> MS : on_enter()
    end
end

alt Fermeture de la fenêtre
    J -> G : handle_event(QUIT)
    G -> G : running = False
end

G -> Main : pygame.quit()
deactivate Proj
deactivate W
deactivate P
deactivate GS
deactivate MS
deactivate G
@enduml