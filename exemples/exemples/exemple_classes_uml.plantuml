@startuml ClassDiagram
' Diagramme de classes : Voiture et Circuit

title Diagramme de classes - Course de voitures

class Voiture <<entity>> {
    - id : str
    - vitesse : int = 0
    - position : float = 0.0
    - carburant : float = 100.0
    ~ __init__(self, id: str) -> None
    + accelerer(self, delta: int) -> None
    + freiner(self, delta: int) -> None
    ~ avancer(self, distance: float) -> None
    + est_arrivee(self, longueur_tour: float, tours_restants: int) -> bool
}

class Circuit <<aggregate>> {
    - longueur_tour : float
    - nombre_tours : int
    - participants : list[Voiture]
    + __init__(self, longueur_tour: float, nombre_tours: int) -> None
    + ajouter_voiture(self, v: Voiture) -> None
    + demarrer_course(self) -> None
    ~ enregistrer_tour(self, v: Voiture) -> None
    + est_terminee(self) -> bool
    + afficher_classement(self) -> list[str]
}

' Association : un circuit contient plusieurs voitures
Circuit "1" o-- "*" Voiture : contient

note right of Circuit
Le circuit gère la course :
- ajoute des voitures
- démarre et enregistre les tours
- calcule le classement
end note
@enduml
